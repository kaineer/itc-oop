// 0. После того, как все тесты в 10 задании выполнятся
//   копируем классы сюда
//
// 1. В классах TextInput, CheckboxInput
//   добавляем метод destroy, который будет удалять
//   инпут из контейнера
//
//   Было бы совсем хорошо перед удалением инпута
//   отписывать его от событий (теста на это не будет, но
//   при проверке вручную это будет учитываться)
//
// 2. Добавляем класс Page, который будет содержать в себе
//   несколько инпутов
//
// 3. В Page добавляем метод add(), который будет добавлять
//   созданный инпут в page
//
//   Пример:
//
//   const page = new Page()
//   const input = new TextInput("name", "value", "label")
//   page.add(input);
//
//   ВАЖНО: Добавление инпута в page не приводит к его отрисовке
//
// 4. В Page добавляем метод render(), который будет принимать
//   первым параметром container, внутри которого будут
//     отрисовываться инпуты из Page
//   вторым параметром - DataContainer, к которому будут
//     подписываться все инпуты
//
// 5. В Page добавляем метод destroy(), который будет удалять
//   из контейнера все инпуты, просто вызывая
//   для каждого из них destroy()
//
// 6. Добавляем класс Wizard, который будет содержать в себе объекты класса Page, отрисовывая одновременно только одну
//
// 7. В Wizard добавляем метод add(), которая будет добавлять объект класса Page внутрь визарда
//   Если до этого текущий номер страницы не был указан, он становится равным нулю
//
// 8. В Wizard добавляем метод render(), который будет отрисовывать текущую страницу.
//   Метод, как и Page#render, получает два параметра, container и dataContainer
//   Если текущий номер страницы еще не указан, ничего не происходит
//   Если номер указан, вызывается метод render страницы с указанным номером
//
// 9. В Wizard добавляем метод set(), который будет переключать номер текущей страницы
//   Если номер страницы не сменился, ничего не делаем
//   Если номер страницы сменился и какая-то страница уже была отображена, удаляем ее, затем отрисовываем новую
